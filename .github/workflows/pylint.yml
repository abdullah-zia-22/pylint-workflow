name: Pylint

on:
  push:
    branches:
      - main  # Change this to the branch you want to monitor

jobs:
  check_files:
    runs-on: ubuntu-latest
    outputs:
      py_exists: ${{ steps.check_py.outputs.py_exists }}
      req_exists: ${{ steps.check_req.outputs.req_exists }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check for Python files
        id: check_py
        run: |
          if find . -name "*.py" | grep -q .; then
            echo "::set-output name=py_exists::true"
          else
            echo "No Python files found. Skipping."
            echo "::set-output name=py_exists::false"
          fi

      - name: Check for requirements.txt
        id: check_req
        if: steps.check_py.outputs.py_exists == 'true'
        run: |
          if [ ! -f requirements.txt ]; then
            echo "::error::No requirements.txt found. Failing the action."
            exit 1
          else
            echo "::set-output name=req_exists::true"
          fi

  linting:
    needs: check_files
    runs-on: ubuntu-latest
    if: needs.check_files.outputs.py_exists == 'true' && needs.check_files.outputs.req_exists == 'true'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pylint

      - name: Run Pylint
        run: |
          pylint_score=9  # Change this to the minimum required score
          fail=false

          for file in $(find . -name "*.py" -type f); do
            score=$(pylint "$file" | grep -oP '(?<=Your code has been rated at ).*(?=/10)')
            echo "Pylint score for $file: $score/10"
            if (( $(bc <<< "$score < $pylint_score") )); then
              echo "Pylint score for $file is less than $pylint_score."
              fail=true
            fi
          done

          if [ "$fail" = true ]; then
            echo "Pylint check failed."
            exit 1
          else
            echo "Pylint check passed."
          fi
